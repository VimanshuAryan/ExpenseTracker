{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","enteredTitle","setEnteredTitle","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.252995c8.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    // console.log(event.target.value);\r\n    props.onFilterChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate (props) {\r\n    const month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{day}</div>\r\n            <div className='expense-date__day'>{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem (props) {\r\n\r\n    return (\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date = {props.date}/>\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpenseList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.items.map((expense) => (\r\n            <ExpenseItem \r\n            key = {expense.id}\r\n            title = {expense.title}\r\n            amount = {expense.amount}\r\n            date = {expense.date}\r\n            />))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n    \r\n    if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value/props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\"\r\n                    // dynamic styling\r\n                    style = {{ height : barFillHeight}}>\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues); \r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, {useState} from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport './Expenses.css';\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpenseList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (year) => {\r\n        setFilteredYear(year);\r\n        // console.log(filteredYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    // let expensesContent = <p>No expenses found.</p>;\r\n\r\n    // if (filteredExpenses.length > 0) {\r\n    //     expensesContent =\r\n    //         filteredExpenses.map((expense) => (\r\n    //         <ExpenseItem \r\n    //         key = {expense.id}\r\n    //         title = {expense.title}\r\n    //         amount = {expense.amount}\r\n    //         date = {expense.date}\r\n    //         />));\r\n    // }\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter \r\n                selected = {filteredYear} \r\n                onFilterChange = {filterChangeHandler} />\r\n            <ExpensesChart expenses = {filteredExpenses}/>\r\n            <ExpensesList \r\n                items = {filteredExpenses}/>            \r\n            {/* {expensesContent} */}\r\n            {/* {filteredExpenses.length === 0 && <p>No expenses found</p>}\r\n            {filteredExpenses.length > 0 &&\r\n                filteredExpenses.map(expense =>\r\n                <ExpenseItem \r\n                key = {expense.id}\r\n                title = {expense.title}\r\n                amount = {expense.amount}\r\n                date = {expense.date}\r\n                />)\r\n            }             */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n\r\n    // const [enteredInput, setEnteredInput] = useState({\r\n    //     enteredAmount:'',\r\n    //     enteredDate:'',\r\n    //     enteredTitle:''\r\n    // });\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    //     setEnteredInput({ \r\n    //         ...enteredInput,\r\n    //         enteredTitle: event.target.value\r\n    // });\r\n    };\r\n\r\n    const amountChangeHandler = event => {\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n\r\n    const dateChangeHandler = event => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        //default javascript behavior, not react specific\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        props.onSaveExpenseData(expenseData);\r\n        // console.log(expenseData);\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        setEnteredTitle('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type = 'text' \r\n                    value = {enteredTitle} \r\n                    onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type = 'number' \r\n                    min=\"0.01\" \r\n                    step=\"0.01\" \r\n                    value={enteredAmount} \r\n                    onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type = 'date'\r\n                     min=\"2019-01-01\" \r\n                     max=\"2022-12-31\" \r\n                     value={enteredDate} \r\n                     onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React,{useState} from \"react\";\r\n//Technically the above line is not required, the project will still work.\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        // console.log(expenseData);\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const newExpenseHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const cancelHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return <div className=\"new-expense\">\r\n        {!isEditing && <button onClick={newExpenseHandler}>New Expense</button>}\r\n        {isEditing && <ExpenseForm \r\n            onCancel = {cancelHandler} \r\n            onSaveExpenseData = {saveExpenseDataHandler} />}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import React,{useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2',\n    title: 'New TV',\n    amount: 799.49, \n    date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expenseData => {\n    setExpenses((prevExpenses) => {\n      return [expenseData, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense = {addExpenseHandler}/>\n      <Expenses items = {expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}